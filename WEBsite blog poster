Al installar python hay que asegurar marcar el path en la instalacion para evitar problemas de identificacion de codigo en el medio virtual de python en windows.
Para checar si tienes python en tu sistema simplemente abres la terminal y escribes python el sistema lo reconocera te dara la version que tienes activa y luego pasara a una emulacion del ambiente de codigo en la misma terminal, para salir de el usualmente de hace con control+c, pero en mi caso por alguna razon me da KeyboardInterrupt exception asi que debo usas control+z o escribir "exit()".
Paginas en Python son mas seguras que las normales escritas en JavaScript. tiene un admin system integrado el database puesde estar en mysql o postgres pero viene integrado con SQLite3.
Es un sistema de produccion lista.
Python 3.5 viene con virtual enviroment  evtia que otros sistemas o applicaciones se interpongan en tu sistema en projecto crea un medio limpio de trabajo sin conflictos.
Para crear el enviroment escribes virtualenv <nombre del nuevo entorno> --no-site-packages el flag "--no-site-packages" evita que se intales otros componentes relacionados a otros proyectosademas que crea un conjunto de archivos y carpetas que se encargaran de las funciones que quieras traer al proyecto.
luego toca activar virtualenviroment para esto se tiene que ir a la carpeta scripts en <nombre del entorno>/scripts y se escribe "activate" luego el terminal se vera asi cuando este activo "(<Nombre del entorno>) C:\Projects\tutorials\django_test\<nombre del entorno>\scripts>"
Luego se saldra de el al punto donde se quiere iniciar el proyecto y se implementa el codigo de intalacion "pip install django" para instalar localmente django. Entonces solo queda crear el projecto en django. 
Con el comando "django-admin startproject <nombre de proyecto>" crea el projecto en django permitira iniciar el trabajo pero cabe la posiblidad de que esto no funcione si esto sucede se puede iniciar directamente con  "python enviro/lib/site-packages/django-admin.py startproject <nombre del proyecto>"
